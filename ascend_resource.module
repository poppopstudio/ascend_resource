<?php

/**
 * @file
 * Contains hook implementations for the Ascend resource module.
 */

use Drupal\ascend_resource\Hook\ResourceHooks;
use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Hook\LegacyHook;
use Drupal\Core\Render\Element;

/**
 * Legacy hook implementation.
 *
 * @todo Remove this method when support for Drupal core < 11.1 is dropped.
 */
#[LegacyHook]
function ascend_resource_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  \Drupal::service(ResourceHooks::class)->formAlter($form, $form_state, $form_id);
}

/**
 * Legacy hook implementation.
 *
 * @todo Remove this method when support for Drupal core < 11.1 is dropped.
 */
#[LegacyHook]
function ascend_resource_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  \Drupal::service(ResourceHooks::class)->entityViewAlter($build, $entity, $display);
}

/**
 * Legacy hook implementation.
 *
 * @todo Remove this method when support for Drupal core < 11.1 is dropped.
 */
#[LegacyHook]
function ascend_resource_taxonomy_term_presave(EntityInterface $entity) {
  \Drupal::service(ResourceHooks::class)->taxonomyTermPresave($entity);
}


/**
 * Legacy hook implementation.
 *
 * @todo Remove this method when support for Drupal core < 11.1 is dropped.
 */
#[LegacyHook]
function ascend_resource_entity_form_display_alter(EntityFormDisplayInterface $form_display, array $context) {
  \Drupal::service(ResourceHooks::class)->entityFormDisplayAlter($form_display, $context);
}


/**
 * These two functions were required in order to add compatibility with
 *  field_group module. This also necessitated the resource.html.twig template.
 *  https://www.drupal.org/project/field_group/issues/2859858
 */

function ascend_resource_theme($existing, $type, $theme, $path) {
  return [
    'resource' => [
      'render element' => 'elements',
    ],
  ];
}

function template_preprocess_resource(&$variables) {
  // Converts 'resource' data to 'content'.
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  $variables += ['content' => []];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

function ascend_resource_gin_content_form_routes(): array {
  return [
    // Resource entity edit forms handled by gin (to get sidebar).
    'entity.resource.add_form',
    'entity.resource.edit_form',
  ];
}
